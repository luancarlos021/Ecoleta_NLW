apiVersion: v1
kind: Namespace
metadata:
  name: e-coleta
status:
  phase: Active

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: e-coleta
  name: e-coleta
  namespace: e-coleta
spec:
  replicas: 1
  selector:
    matchLabels:
      app: e-coleta
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  template:
    metadata:
      labels:
        app: e-coleta
    spec:
      containers:
      - image: luancarlos021/ecoleta:dev-23060ba
        imagePullPolicy: Always
        name: e-coleta
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "100Mi"
            cpu: "300m"
        ports:
          - containerPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: e-coleta
  name: e-coleta
  namespace: e-coleta
  annotations:
    version: "1.0"
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: e-coleta
  sessionAffinity: None
  type: ClusterIP
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-app
  labels:
    name: ingress-app
  namespace: e-coleta
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod-cluster"
    # cert-manager.io/cluster-issuer: "letsencrypt-staging-cluster"
spec:
  ingressClassName: "nginx"
  rules:
  - host: "e-coleta.luancarlos.duckdns.org"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: e-coleta
            port:
              number: 3000
  tls:
  - hosts:
      - e-coleta.luancarlos.duckdns.org
    secretName: letsencrypt-prod-cluster-tls